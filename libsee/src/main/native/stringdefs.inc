/* This is a generated file: do not edit */

#include <see/string.h>

#define STR_SEGMENT(offset,length) \
    { length, (SEE_char_t *)stringtext + offset, 0, 0, SEE_STRING_FLAG_STATIC }

static const SEE_char_t stringtext[] = {
	 /* "Wrong number of arguments passed to the function" */
	87,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,32,112,97,115,115,101,100,32,116,111,32,116,104,101,32,102,117,110,99,116,105,111,110,
	 /* "Invalid arguments were given to the function" */
	73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,32,119,101,114,101,32,103,105,118,101,110,32,116,111,32,116,104,101,32,102,117,110,99,116,105,111,110,
	 /* "Internal error occurred; please report" */
	73,110,116,101,114,110,97,108,32,101,114,114,111,114,32,111,99,99,117,114,114,101,100,59,32,112,108,101,97,115,101,32,114,101,112,111,114,116,
	 /* "'new' cannot be applied to a non-object" */
	39,110,101,119,39,32,99,97,110,110,111,116,32,98,101,32,97,112,112,108,105,101,100,32,116,111,32,97,32,110,111,110,45,111,98,106,101,99,116,
	 /* "'new' cannot be applied to the object" */
	39,110,101,119,39,32,99,97,110,110,111,116,32,98,101,32,97,112,112,108,105,101,100,32,116,111,32,116,104,101,32,111,98,106,101,99,116,
	 /* "Function is not defined" */
	70,117,110,99,116,105,111,110,32,105,115,32,110,111,116,32,100,101,102,105,110,101,100,
	 /* "Value is not a function" */
	86,97,108,117,101,32,105,115,32,110,111,116,32,97,32,102,117,110,99,116,105,111,110,
	 /* "Object is not callable" */
	79,98,106,101,99,116,32,105,115,32,110,111,116,32,99,97,108,108,97,98,108,101,
	 /* "Value following 'instanceof' is not an object" */
	86,97,108,117,101,32,102,111,108,108,111,119,105,110,103,32,39,105,110,115,116,97,110,99,101,111,102,39,32,105,115,32,110,111,116,32,97,110,32,111,98,106,101,99,116,
	 /* "Value following 'in' is not an object" */
	86,97,108,117,101,32,102,111,108,108,111,119,105,110,103,32,39,105,110,39,32,105,115,32,110,111,116,32,97,110,32,111,98,106,101,99,116,
	 /* "Object does not support the 'instanceof' operator" */
	79,98,106,101,99,116,32,100,111,101,115,32,110,111,116,32,115,117,112,112,111,114,116,32,116,104,101,32,39,105,110,115,116,97,110,99,101,111,102,39,32,111,112,101,114,97,116,111,114,
	 /* "Left-hand-side of the assignment cannot be assigned to" */
	76,101,102,116,45,104,97,110,100,45,115,105,100,101,32,111,102,32,116,104,101,32,97,115,115,105,103,110,109,101,110,116,32,99,97,110,110,111,116,32,98,101,32,97,115,115,105,103,110,101,100,32,116,111,
	 /* "Regular expression contained a syntax error" */
	82,101,103,117,108,97,114,32,101,120,112,114,101,115,115,105,111,110,32,99,111,110,116,97,105,110,101,100,32,97,32,115,121,110,116,97,120,32,101,114,114,111,114,
	 /* "Call limit was reached; runaway recursion?" */
	67,97,108,108,32,108,105,109,105,116,32,119,97,115,32,114,101,97,99,104,101,100,59,32,114,117,110,97,119,97,121,32,114,101,99,117,114,115,105,111,110,63,
	 /* "String too long" */
	83,116,114,105,110,103,32,116,111,111,32,108,111,110,103,
	 /* "error" */
	101,114,114,111,114,
	 /* "No string space left" */
	78,111,32,115,116,114,105,110,103,32,115,112,97,99,101,32,108,101,102,116,
	 /* "Invalid UTF-16 sequence was found in the string" */
	73,110,118,97,108,105,100,32,85,84,70,45,49,54,32,115,101,113,117,101,110,99,101,32,119,97,115,32,102,111,117,110,100,32,105,110,32,116,104,101,32,115,116,114,105,110,103,
	 /* "<input>" */
	60,105,110,112,117,116,62,
	 /* "<string>" */
	60,115,116,114,105,110,103,62,
	 /* "<eval>" */
	60,101,118,97,108,62,
	 /* "Duplicate label '" */
	68,117,112,108,105,99,97,116,101,32,108,97,98,101,108,32,39,
	 /* "Previous definition" */
	80,114,101,118,105,111,117,115,32,100,101,102,105,110,105,116,105,111,110,
	 /* "Tried to use undefined as an object" */
	84,114,105,101,100,32,116,111,32,117,115,101,32,117,110,100,101,102,105,110,101,100,32,97,115,32,97,110,32,111,98,106,101,99,116,
	 /* "Tried to use null as an object" */
	84,114,105,101,100,32,116,111,32,117,115,101,32,110,117,108,108,32,97,115,32,97,110,32,111,98,106,101,99,116,
	 /* "Value cannot be converted into an object" */
	86,97,108,117,101,32,99,97,110,110,111,116,32,98,101,32,99,111,110,118,101,114,116,101,100,32,105,110,116,111,32,97,110,32,111,98,106,101,99,116,
	 /* "Value cannot be converted into a boolean" */
	86,97,108,117,101,32,99,97,110,110,111,116,32,98,101,32,99,111,110,118,101,114,116,101,100,32,105,110,116,111,32,97,32,98,111,111,108,101,97,110,
	 /* "Value cannot be converted into a number" */
	86,97,108,117,101,32,99,97,110,110,111,116,32,98,101,32,99,111,110,118,101,114,116,101,100,32,105,110,116,111,32,97,32,110,117,109,98,101,114,
	 /* "Value cannot be converted into a string" */
	86,97,108,117,101,32,99,97,110,110,111,116,32,98,101,32,99,111,110,118,101,114,116,101,100,32,105,110,116,111,32,97,32,115,116,114,105,110,103,
	 /* "Object cannot be converted into a string" */
	79,98,106,101,99,116,32,99,97,110,110,111,116,32,98,101,32,99,111,110,118,101,114,116,101,100,32,105,110,116,111,32,97,32,115,116,114,105,110,103,
	 /* "Object cannot be converted into a number" */
	79,98,106,101,99,116,32,99,97,110,110,111,116,32,98,101,32,99,111,110,118,101,114,116,101,100,32,105,110,116,111,32,97,32,110,117,109,98,101,114,
	 /* "Object cannot be converted into a default form" */
	79,98,106,101,99,116,32,99,97,110,110,111,116,32,98,101,32,99,111,110,118,101,114,116,101,100,32,105,110,116,111,32,97,32,100,101,102,97,117,108,116,32,102,111,114,109,
	 /* "Object is not a native Array object" */
	79,98,106,101,99,116,32,105,115,32,110,111,116,32,97,32,110,97,116,105,118,101,32,65,114,114,97,121,32,111,98,106,101,99,116,
	 /* "Bad length given to the Array constructor" */
	66,97,100,32,108,101,110,103,116,104,32,103,105,118,101,110,32,116,111,32,116,104,101,32,65,114,114,97,121,32,99,111,110,115,116,114,117,99,116,111,114,
	 /* "Object is not a native Boolean object" */
	79,98,106,101,99,116,32,105,115,32,110,111,116,32,97,32,110,97,116,105,118,101,32,66,111,111,108,101,97,110,32,111,98,106,101,99,116,
	 /* "Object is not a native Function object" */
	79,98,106,101,99,116,32,105,115,32,110,111,116,32,97,32,110,97,116,105,118,101,32,70,117,110,99,116,105,111,110,32,111,98,106,101,99,116,
	 /* "Object is not a native CFunction object" */
	79,98,106,101,99,116,32,105,115,32,110,111,116,32,97,32,110,97,116,105,118,101,32,67,70,117,110,99,116,105,111,110,32,111,98,106,101,99,116,
	 /* "Object is not a native Number object" */
	79,98,106,101,99,116,32,105,115,32,110,111,116,32,97,32,110,97,116,105,118,101,32,78,117,109,98,101,114,32,111,98,106,101,99,116,
	 /* "Object is not a native RegExp object" */
	79,98,106,101,99,116,32,105,115,32,110,111,116,32,97,32,110,97,116,105,118,101,32,82,101,103,69,120,112,32,111,98,106,101,99,116,
	 /* "Object is not a native String object" */
	79,98,106,101,99,116,32,105,115,32,110,111,116,32,97,32,110,97,116,105,118,101,32,83,116,114,105,110,103,32,111,98,106,101,99,116,
	 /* "Object is not a native Date object" */
	79,98,106,101,99,116,32,105,115,32,110,111,116,32,97,32,110,97,116,105,118,101,32,68,97,116,101,32,111,98,106,101,99,116,
	 /* "Method called with a null object" */
	77,101,116,104,111,100,32,99,97,108,108,101,100,32,119,105,116,104,32,97,32,110,117,108,108,32,111,98,106,101,99,116,
	 /* "Second argument to apply() is not an array" */
	83,101,99,111,110,100,32,97,114,103,117,109,101,110,116,32,116,111,32,97,112,112,108,121,40,41,32,105,115,32,110,111,116,32,97,110,32,97,114,114,97,121,
	 /* "Radix argument does not lie between 2 and 36, inclusive" */
	82,97,100,105,120,32,97,114,103,117,109,101,110,116,32,100,111,101,115,32,110,111,116,32,108,105,101,32,98,101,116,119,101,101,110,32,50,32,97,110,100,32,51,54,44,32,105,110,99,108,117,115,105,118,101,
	 /* "Bad argument was given to RegExp constructor" */
	66,97,100,32,97,114,103,117,109,101,110,116,32,119,97,115,32,103,105,118,101,110,32,116,111,32,82,101,103,69,120,112,32,99,111,110,115,116,114,117,99,116,111,114,
	 /* "Bad flag given to RegExp constructor" */
	66,97,100,32,102,108,97,103,32,103,105,118,101,110,32,116,111,32,82,101,103,69,120,112,32,99,111,110,115,116,114,117,99,116,111,114,
	 /* "Bad hexadecimal escape sequence in URI" */
	66,97,100,32,104,101,120,97,100,101,99,105,109,97,108,32,101,115,99,97,112,101,32,115,101,113,117,101,110,99,101,32,105,110,32,85,82,73,
	 /* "Invalid UTF-8 sequence in string" */
	73,110,118,97,108,105,100,32,85,84,70,45,56,32,115,101,113,117,101,110,99,101,32,105,110,32,115,116,114,105,110,103,
	 /* "Unicode codepoint is too large for UTF-16" */
	85,110,105,99,111,100,101,32,99,111,100,101,112,111,105,110,116,32,105,115,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,85,84,70,45,49,54,
	 /* "Sort comparison function did not return a number" */
	83,111,114,116,32,99,111,109,112,97,114,105,115,111,110,32,102,117,110,99,116,105,111,110,32,100,105,100,32,110,111,116,32,114,101,116,117,114,110,32,97,32,110,117,109,98,101,114,
	 /* "'toLocaleString' property is not a function" */
	39,116,111,76,111,99,97,108,101,83,116,114,105,110,103,39,32,112,114,111,112,101,114,116,121,32,105,115,32,110,111,116,32,97,32,102,117,110,99,116,105,111,110,
	 /* "toLocaleString() property did not return a string" */
	116,111,76,111,99,97,108,101,83,116,114,105,110,103,40,41,32,112,114,111,112,101,114,116,121,32,100,105,100,32,110,111,116,32,114,101,116,117,114,110,32,97,32,115,116,114,105,110,103,
	 /* "eval() must not be invoked indirectly" */
	101,118,97,108,40,41,32,109,117,115,116,32,110,111,116,32,98,101,32,105,110,118,111,107,101,100,32,105,110,100,105,114,101,99,116,108,121,
	 /* "Too many arguments" */
	84,111,111,32,109,97,110,121,32,97,114,103,117,109,101,110,116,115,
	 /* "String contains non-ASCII character(s)" */
	83,116,114,105,110,103,32,99,111,110,116,97,105,110,115,32,110,111,110,45,65,83,67,73,73,32,99,104,97,114,97,99,116,101,114,40,115,41,
	 /* "String contains null character(s)" */
	83,116,114,105,110,103,32,99,111,110,116,97,105,110,115,32,110,117,108,108,32,99,104,97,114,97,99,116,101,114,40,115,41,
	 /* "Not implemented" */
	78,111,116,32,105,109,112,108,101,109,101,110,116,101,100,
	 /* "ECMA-262 'implementation dependent' result" */
	69,67,77,65,45,50,54,50,32,39,105,109,112,108,101,109,101,110,116,97,116,105,111,110,32,100,101,112,101,110,100,101,110,116,39,32,114,101,115,117,108,116,
	 /* "" */
		 /* "0" */
	48,
	 /* "," */
	44,
	 /* "write" */
	119,114,105,116,101,
	 /* "writeval" */
	119,114,105,116,101,118,97,108,
	 /* "-" */
	45,
	 /* "name" */
	110,97,109,101,
	 /* "message" */
	109,101,115,115,97,103,101,
	 /* "Error" */
	69,114,114,111,114,
	 /* "EvalError" */
	69,118,97,108,69,114,114,111,114,
	 /* "RangeError" */
	82,97,110,103,101,69,114,114,111,114,
	 /* "ReferenceError" */
	82,101,102,101,114,101,110,99,101,69,114,114,111,114,
	 /* "SyntaxError" */
	83,121,110,116,97,120,69,114,114,111,114,
	 /* "TypeError" */
	84,121,112,101,69,114,114,111,114,
	 /* "URIError" */
	85,82,73,69,114,114,111,114,
	 /* "arguments" */
	97,114,103,117,109,101,110,116,115,
	 /* "callee" */
	99,97,108,108,101,101,
	 /* "source" */
	115,111,117,114,99,101,
	 /* "global" */
	103,108,111,98,97,108,
	 /* "ignoreCase" */
	105,103,110,111,114,101,67,97,115,101,
	 /* "multiline" */
	109,117,108,116,105,108,105,110,101,
	 /* "lastIndex" */
	108,97,115,116,73,110,100,101,120,
	 /* "exec" */
	101,120,101,99,
	 /* "test" */
	116,101,115,116,
	 /* "index" */
	105,110,100,101,120,
	 /* "input" */
	105,110,112,117,116,
	 /* "parse" */
	112,97,114,115,101,
	 /* "UTC" */
	85,84,67,
	 /* "toDateString" */
	116,111,68,97,116,101,83,116,114,105,110,103,
	 /* "toTimeString" */
	116,111,84,105,109,101,83,116,114,105,110,103,
	 /* "toLocaleDateString" */
	116,111,76,111,99,97,108,101,68,97,116,101,83,116,114,105,110,103,
	 /* "toLocaleTimeString" */
	116,111,76,111,99,97,108,101,84,105,109,101,83,116,114,105,110,103,
	 /* "getTime" */
	103,101,116,84,105,109,101,
	 /* "getFullYear" */
	103,101,116,70,117,108,108,89,101,97,114,
	 /* "getUTCFullYear" */
	103,101,116,85,84,67,70,117,108,108,89,101,97,114,
	 /* "getMonth" */
	103,101,116,77,111,110,116,104,
	 /* "getUTCMonth" */
	103,101,116,85,84,67,77,111,110,116,104,
	 /* "getDate" */
	103,101,116,68,97,116,101,
	 /* "getUTCDate" */
	103,101,116,85,84,67,68,97,116,101,
	 /* "getDay" */
	103,101,116,68,97,121,
	 /* "getUTCDay" */
	103,101,116,85,84,67,68,97,121,
	 /* "getHours" */
	103,101,116,72,111,117,114,115,
	 /* "getUTCHours" */
	103,101,116,85,84,67,72,111,117,114,115,
	 /* "getMinutes" */
	103,101,116,77,105,110,117,116,101,115,
	 /* "getUTCMinutes" */
	103,101,116,85,84,67,77,105,110,117,116,101,115,
	 /* "getSeconds" */
	103,101,116,83,101,99,111,110,100,115,
	 /* "getUTCSeconds" */
	103,101,116,85,84,67,83,101,99,111,110,100,115,
	 /* "getMilliseconds" */
	103,101,116,77,105,108,108,105,115,101,99,111,110,100,115,
	 /* "getUTCMilliseconds" */
	103,101,116,85,84,67,77,105,108,108,105,115,101,99,111,110,100,115,
	 /* "getTimezoneOffset" */
	103,101,116,84,105,109,101,122,111,110,101,79,102,102,115,101,116,
	 /* "setTime" */
	115,101,116,84,105,109,101,
	 /* "setMilliseconds" */
	115,101,116,77,105,108,108,105,115,101,99,111,110,100,115,
	 /* "setUTCMilliseconds" */
	115,101,116,85,84,67,77,105,108,108,105,115,101,99,111,110,100,115,
	 /* "setSeconds" */
	115,101,116,83,101,99,111,110,100,115,
	 /* "setUTCSeconds" */
	115,101,116,85,84,67,83,101,99,111,110,100,115,
	 /* "setMinutes" */
	115,101,116,77,105,110,117,116,101,115,
	 /* "setUTCMinutes" */
	115,101,116,85,84,67,77,105,110,117,116,101,115,
	 /* "setHours" */
	115,101,116,72,111,117,114,115,
	 /* "setUTCHours" */
	115,101,116,85,84,67,72,111,117,114,115,
	 /* "setDate" */
	115,101,116,68,97,116,101,
	 /* "setUTCDate" */
	115,101,116,85,84,67,68,97,116,101,
	 /* "setMonth" */
	115,101,116,77,111,110,116,104,
	 /* "setUTCMonth" */
	115,101,116,85,84,67,77,111,110,116,104,
	 /* "setFullYear" */
	115,101,116,70,117,108,108,89,101,97,114,
	 /* "setUTCFullYear" */
	115,101,116,85,84,67,70,117,108,108,89,101,97,114,
	 /* "toUTCString" */
	116,111,85,84,67,83,116,114,105,110,103,
	 /* "Object" */
	79,98,106,101,99,116,
	 /* "Function" */
	70,117,110,99,116,105,111,110,
	 /* "Array" */
	65,114,114,97,121,
	 /* "String" */
	83,116,114,105,110,103,
	 /* "Boolean" */
	66,111,111,108,101,97,110,
	 /* "Number" */
	78,117,109,98,101,114,
	 /* "Date" */
	68,97,116,101,
	 /* "RegExp" */
	82,101,103,69,120,112,
	 /* "Math" */
	77,97,116,104,
	 /* "Infinity" */
	73,110,102,105,110,105,116,121,
	 /* "NaN" */
	78,97,78,
	 /* "apply" */
	97,112,112,108,121,
	 /* "call" */
	99,97,108,108,
	 /* "charAt" */
	99,104,97,114,65,116,
	 /* "charCodeAt" */
	99,104,97,114,67,111,100,101,65,116,
	 /* "concat" */
	99,111,110,99,97,116,
	 /* "constructor" */
	99,111,110,115,116,114,117,99,116,111,114,
	 /* "decodeURI" */
	100,101,99,111,100,101,85,82,73,
	 /* "decodeURIComponent" */
	100,101,99,111,100,101,85,82,73,67,111,109,112,111,110,101,110,116,
	 /* "encodeURI" */
	101,110,99,111,100,101,85,82,73,
	 /* "encodeURIComponent" */
	101,110,99,111,100,101,85,82,73,67,111,109,112,111,110,101,110,116,
	 /* "eval" */
	101,118,97,108,
	 /* "fromCharCode" */
	102,114,111,109,67,104,97,114,67,111,100,101,
	 /* "hasOwnProperty" */
	104,97,115,79,119,110,80,114,111,112,101,114,116,121,
	 /* "indexOf" */
	105,110,100,101,120,79,102,
	 /* "isFinite" */
	105,115,70,105,110,105,116,101,
	 /* "isNaN" */
	105,115,78,97,78,
	 /* "isPrototypeOf" */
	105,115,80,114,111,116,111,116,121,112,101,79,102,
	 /* "join" */
	106,111,105,110,
	 /* "lastIndexOf" */
	108,97,115,116,73,110,100,101,120,79,102,
	 /* "length" */
	108,101,110,103,116,104,
	 /* "localeCompare" */
	108,111,99,97,108,101,67,111,109,112,97,114,101,
	 /* "match" */
	109,97,116,99,104,
	 /* "parseFloat" */
	112,97,114,115,101,70,108,111,97,116,
	 /* "parseInt" */
	112,97,114,115,101,73,110,116,
	 /* "pop" */
	112,111,112,
	 /* "propertyIsEnumerable" */
	112,114,111,112,101,114,116,121,73,115,69,110,117,109,101,114,97,98,108,101,
	 /* "prototype" */
	112,114,111,116,111,116,121,112,101,
	 /* "push" */
	112,117,115,104,
	 /* "replace" */
	114,101,112,108,97,99,101,
	 /* "reverse" */
	114,101,118,101,114,115,101,
	 /* "search" */
	115,101,97,114,99,104,
	 /* "shift" */
	115,104,105,102,116,
	 /* "slice" */
	115,108,105,99,101,
	 /* "sort" */
	115,111,114,116,
	 /* "splice" */
	115,112,108,105,99,101,
	 /* "split" */
	115,112,108,105,116,
	 /* "substring" */
	115,117,98,115,116,114,105,110,103,
	 /* "toLocaleLowerCase" */
	116,111,76,111,99,97,108,101,76,111,119,101,114,67,97,115,101,
	 /* "toLocaleString" */
	116,111,76,111,99,97,108,101,83,116,114,105,110,103,
	 /* "toLocaleUpperCase" */
	116,111,76,111,99,97,108,101,85,112,112,101,114,67,97,115,101,
	 /* "toLowerCase" */
	116,111,76,111,119,101,114,67,97,115,101,
	 /* "toString" */
	116,111,83,116,114,105,110,103,
	 /* "toUpperCase" */
	116,111,85,112,112,101,114,67,97,115,101,
	 /* "undefined" */
	117,110,100,101,102,105,110,101,100,
	 /* "unshift" */
	117,110,115,104,105,102,116,
	 /* "valueOf" */
	118,97,108,117,101,79,102,
	 /* "MAX_VALUE" */
	77,65,88,95,86,65,76,85,69,
	 /* "MIN_VALUE" */
	77,73,78,95,86,65,76,85,69,
	 /* "NEGATIVE_INFINITY" */
	78,69,71,65,84,73,86,69,95,73,78,70,73,78,73,84,89,
	 /* "POSITIVE_INFINITY" */
	80,79,83,73,84,73,86,69,95,73,78,70,73,78,73,84,89,
	 /* "toFixed" */
	116,111,70,105,120,101,100,
	 /* "toExponential" */
	116,111,69,120,112,111,110,101,110,116,105,97,108,
	 /* "toPrecision" */
	116,111,80,114,101,99,105,115,105,111,110,
	 /* "E" */
	69,
	 /* "LN10" */
	76,78,49,48,
	 /* "LN2" */
	76,78,50,
	 /* "LOG2E" */
	76,79,71,50,69,
	 /* "LOG10E" */
	76,79,71,49,48,69,
	 /* "PI" */
	80,73,
	 /* "SQRT1_2" */
	83,81,82,84,49,95,50,
	 /* "SQRT2" */
	83,81,82,84,50,
	 /* "abs" */
	97,98,115,
	 /* "acos" */
	97,99,111,115,
	 /* "asin" */
	97,115,105,110,
	 /* "atan" */
	97,116,97,110,
	 /* "atan2" */
	97,116,97,110,50,
	 /* "ceil" */
	99,101,105,108,
	 /* "cos" */
	99,111,115,
	 /* "exp" */
	101,120,112,
	 /* "floor" */
	102,108,111,111,114,
	 /* "log" */
	108,111,103,
	 /* "max" */
	109,97,120,
	 /* "min" */
	109,105,110,
	 /* "pow" */
	112,111,119,
	 /* "random" */
	114,97,110,100,111,109,
	 /* "round" */
	114,111,117,110,100,
	 /* "sin" */
	115,105,110,
	 /* "sqrt" */
	115,113,114,116,
	 /* "tan" */
	116,97,110,
	 /* "escape" */
	101,115,99,97,112,101,
	 /* "unescape" */
	117,110,101,115,99,97,112,101,
	 /* "substr" */
	115,117,98,115,116,114,
	 /* "getYear" */
	103,101,116,89,101,97,114,
	 /* "setYear" */
	115,101,116,89,101,97,114,
	 /* "toGMTString" */
	116,111,71,77,84,83,116,114,105,110,103,
	 /* "object" */
	111,98,106,101,99,116,
	 /* "string" */
	115,116,114,105,110,103,
	 /* "number" */
	110,117,109,98,101,114,
	 /* "unknown" */
	117,110,107,110,111,119,110,
	 /* "Token truncated at end of file" */
	84,111,107,101,110,32,116,114,117,110,99,97,116,101,100,32,97,116,32,101,110,100,32,111,102,32,102,105,108,101,
	 /* "String literal not closed at end of line" */
	83,116,114,105,110,103,32,108,105,116,101,114,97,108,32,110,111,116,32,99,108,111,115,101,100,32,97,116,32,101,110,100,32,111,102,32,108,105,110,101,
	 /* "Backslash immediately followed by end of line" */
	66,97,99,107,115,108,97,115,104,32,105,109,109,101,100,105,97,116,101,108,121,32,102,111,108,108,111,119,101,100,32,98,121,32,101,110,100,32,111,102,32,108,105,110,101,
	 /* "Invalid \\x escape" */
	73,110,118,97,108,105,100,32,92,120,32,101,115,99,97,112,101,
	 /* "Invalid \\u escape" */
	73,110,118,97,108,105,100,32,92,117,32,101,115,99,97,112,101,
	 /* "Unexpected characters after hexadecimal literal" */
	85,110,101,120,112,101,99,116,101,100,32,99,104,97,114,97,99,116,101,114,115,32,97,102,116,101,114,32,104,101,120,97,100,101,99,105,109,97,108,32,108,105,116,101,114,97,108,
	 /* "Unexpected characters after decimal literal" */
	85,110,101,120,112,101,99,116,101,100,32,99,104,97,114,97,99,116,101,114,115,32,97,102,116,101,114,32,100,101,99,105,109,97,108,32,108,105,116,101,114,97,108,
	 /* "Comment is missing its closing '*\/'" */
	67,111,109,109,101,110,116,32,105,115,32,109,105,115,115,105,110,103,32,105,116,115,32,99,108,111,115,105,110,103,32,39,42,47,39,
	 /* "Regular expression missing final '/'" */
	82,101,103,117,108,97,114,32,101,120,112,114,101,115,115,105,111,110,32,109,105,115,115,105,110,103,32,102,105,110,97,108,32,39,47,39,
	 /* "Regular expression missing final '/'" */
	82,101,103,117,108,97,114,32,101,120,112,114,101,115,115,105,111,110,32,109,105,115,115,105,110,103,32,102,105,110,97,108,32,39,47,39,
	 /* "Invalid \\u escape in identifier" */
	73,110,118,97,108,105,100,32,92,117,32,101,115,99,97,112,101,32,105,110,32,105,100,101,110,116,105,102,105,101,114,
	 /* "synchronized" */
	115,121,110,99,104,114,111,110,105,122,101,100,
	 /* "..........." */
	46,46,46,46,46,46,46,46,46,46,46,
	 /* "implements" */
	105,109,112,108,101,109,101,110,116,115,
	 /* "instanceof" */
	105,110,115,116,97,110,99,101,111,102,
	 /* "transient" */
	116,114,97,110,115,105,101,110,116,
	 /* "protected" */
	112,114,111,116,101,99,116,101,100,
	 /* "interface" */
	105,110,116,101,114,102,97,99,101,
	 /* "volatile" */
	118,111,108,97,116,105,108,101,
	 /* "debugger" */
	100,101,98,117,103,103,101,114,
	 /* "function" */
	102,117,110,99,116,105,111,110,
	 /* "continue" */
	99,111,110,116,105,110,117,101,
	 /* "abstract" */
	97,98,115,116,114,97,99,116,
	 /* "private" */
	112,114,105,118,97,116,101,
	 /* "package" */
	112,97,99,107,97,103,101,
	 /* "extends" */
	101,120,116,101,110,100,115,
	 /* "boolean" */
	98,111,111,108,101,97,110,
	 /* "finally" */
	102,105,110,97,108,108,121,
	 /* "default" */
	100,101,102,97,117,108,116,
	 /* "native" */
	110,97,116,105,118,101,
	 /* "export" */
	101,120,112,111,114,116,
	 /* "typeof" */
	116,121,112,101,111,102,
	 /* "switch" */
	115,119,105,116,99,104,
	 /* "return" */
	114,101,116,117,114,110,
	 /* "throws" */
	116,104,114,111,119,115,
	 /* "import" */
	105,109,112,111,114,116,
	 /* "static" */
	115,116,97,116,105,99,
	 /* "delete" */
	100,101,108,101,116,101,
	 /* "public" */
	112,117,98,108,105,99,
	 /* "double" */
	100,111,117,98,108,101,
	 /* "float" */
	102,108,111,97,116,
	 /* "super" */
	115,117,112,101,114,
	 /* "short" */
	115,104,111,114,116,
	 /* "const" */
	99,111,110,115,116,
	 /* "class" */
	99,108,97,115,115,
	 /* "while" */
	119,104,105,108,101,
	 /* "final" */
	102,105,110,97,108,
	 /* "throw" */
	116,104,114,111,119,
	 /* "catch" */
	99,97,116,99,104,
	 /* "break" */
	98,114,101,97,107,
	 /* "with" */
	119,105,116,104,
	 /* "long" */
	108,111,110,103,
	 /* "void" */
	118,111,105,100,
	 /* "else" */
	101,108,115,101,
	 /* "goto" */
	103,111,116,111,
	 /* "enum" */
	101,110,117,109,
	 /* "this" */
	116,104,105,115,
	 /* "byte" */
	98,121,116,101,
	 /* "case" */
	99,97,115,101,
	 /* "char" */
	99,104,97,114,
	 /* "new" */
	110,101,119,
	 /* "try" */
	116,114,121,
	 /* "int" */
	105,110,116,
	 /* "for" */
	102,111,114,
	 /* "var" */
	118,97,114,
	 /* "in" */
	105,110,
	 /* "do" */
	100,111,
	 /* "if" */
	105,102,
	 /* "null" */
	110,117,108,108,
	 /* "true" */
	116,114,117,101,
	 /* "false" */
	102,97,108,115,101,
	 /* "__proto__" */
	95,95,112,114,111,116,111,95,95,
	 /* "function " */
	102,117,110,99,116,105,111,110,32,
	 /* "() { /\* built-in " */
	40,41,32,123,32,47,42,32,98,117,105,108,116,45,105,110,32,
	 /* " *\/ }" */
	32,42,47,32,125,
	 /* "1" */
	49,
	 /* "2" */
	50,
	 /* "3" */
	51,
	 /* "4" */
	52,
	 /* "5" */
	53,
	 /* "6" */
	54,
	 /* "7" */
	55,
	 /* "8" */
	56,
	 /* "9" */
	57,
	 /* "$_" */
	36,95,
	 /* "$*" */
	36,42,
	 /* "$&" */
	36,38,
	 /* "$+" */
	36,43,
	 /* "$`" */
	36,96,
	 /* "$'" */
	36,39,
	 /* "$1" */
	36,49,
	 /* "$2" */
	36,50,
	 /* "$3" */
	36,51,
	 /* "$4" */
	36,52,
	 /* "$5" */
	36,53,
	 /* "$6" */
	36,54,
	 /* "$7" */
	36,55,
	 /* "$8" */
	36,56,
	 /* "$9" */
	36,57,
	 /* "lastMatch" */
	108,97,115,116,77,97,116,99,104,
	 /* "lastParen" */
	108,97,115,116,80,97,114,101,110,
	 /* "leftContext" */
	108,101,102,116,67,111,110,116,101,120,116,
	 /* "rightContext" */
	114,105,103,104,116,67,111,110,116,101,120,116,
	 /* "_ns_nop" */
	95,110,115,95,110,111,112,
	 /* "anchor" */
	97,110,99,104,111,114,
	 /* "big" */
	98,105,103,
	 /* "blink" */
	98,108,105,110,107,
	 /* "bold" */
	98,111,108,100,
	 /* "fixed" */
	102,105,120,101,100,
	 /* "fontcolor" */
	102,111,110,116,99,111,108,111,114,
	 /* "fontsize" */
	102,111,110,116,115,105,122,101,
	 /* "italics" */
	105,116,97,108,105,99,115,
	 /* "link" */
	108,105,110,107,
	 /* "small" */
	115,109,97,108,108,
	 /* "strike" */
	115,116,114,105,107,101,
	 /* "sub" */
	115,117,98,
	 /* "sup" */
	115,117,112};
#if STATIC_STRINGS
struct SEE_string SEE_static_stringtab[]
#else
static struct SEE_string stringtab[]
#endif
= {
	STR_SEGMENT(0, 48),
	STR_SEGMENT(48, 44),
	STR_SEGMENT(92, 38),
	STR_SEGMENT(130, 39),
	STR_SEGMENT(169, 37),
	STR_SEGMENT(206, 23),
	STR_SEGMENT(229, 23),
	STR_SEGMENT(252, 22),
	STR_SEGMENT(274, 45),
	STR_SEGMENT(319, 37),
	STR_SEGMENT(356, 49),
	STR_SEGMENT(405, 54),
	STR_SEGMENT(459, 43),
	STR_SEGMENT(502, 42),
	STR_SEGMENT(544, 15),
	STR_SEGMENT(559, 5),
	STR_SEGMENT(564, 20),
	STR_SEGMENT(584, 47),
	STR_SEGMENT(631, 7),
	STR_SEGMENT(638, 8),
	STR_SEGMENT(646, 6),
	STR_SEGMENT(652, 17),
	STR_SEGMENT(669, 19),
	STR_SEGMENT(688, 35),
	STR_SEGMENT(723, 30),
	STR_SEGMENT(753, 40),
	STR_SEGMENT(793, 40),
	STR_SEGMENT(833, 39),
	STR_SEGMENT(872, 39),
	STR_SEGMENT(911, 40),
	STR_SEGMENT(951, 40),
	STR_SEGMENT(991, 46),
	STR_SEGMENT(1037, 35),
	STR_SEGMENT(1072, 41),
	STR_SEGMENT(1113, 37),
	STR_SEGMENT(1150, 38),
	STR_SEGMENT(1188, 39),
	STR_SEGMENT(1227, 36),
	STR_SEGMENT(1263, 36),
	STR_SEGMENT(1299, 36),
	STR_SEGMENT(1335, 34),
	STR_SEGMENT(1369, 32),
	STR_SEGMENT(1401, 42),
	STR_SEGMENT(1443, 55),
	STR_SEGMENT(1498, 44),
	STR_SEGMENT(1542, 36),
	STR_SEGMENT(1578, 38),
	STR_SEGMENT(1616, 32),
	STR_SEGMENT(1648, 41),
	STR_SEGMENT(1689, 48),
	STR_SEGMENT(1737, 43),
	STR_SEGMENT(1780, 49),
	STR_SEGMENT(1829, 37),
	STR_SEGMENT(1866, 18),
	STR_SEGMENT(1884, 38),
	STR_SEGMENT(1922, 33),
	STR_SEGMENT(1955, 15),
	STR_SEGMENT(1970, 42),
	STR_SEGMENT(2012, 0),
	STR_SEGMENT(2012, 1),
	STR_SEGMENT(2013, 1),
	STR_SEGMENT(2014, 5),
	STR_SEGMENT(2019, 8),
	STR_SEGMENT(2027, 1),
	STR_SEGMENT(2028, 4),
	STR_SEGMENT(2032, 7),
	STR_SEGMENT(2039, 5),
	STR_SEGMENT(2044, 9),
	STR_SEGMENT(2053, 10),
	STR_SEGMENT(2063, 14),
	STR_SEGMENT(2077, 11),
	STR_SEGMENT(2088, 9),
	STR_SEGMENT(2097, 8),
	STR_SEGMENT(2105, 9),
	STR_SEGMENT(2114, 6),
	STR_SEGMENT(2120, 6),
	STR_SEGMENT(2126, 6),
	STR_SEGMENT(2132, 10),
	STR_SEGMENT(2142, 9),
	STR_SEGMENT(2151, 9),
	STR_SEGMENT(2160, 4),
	STR_SEGMENT(2164, 4),
	STR_SEGMENT(2168, 5),
	STR_SEGMENT(2173, 5),
	STR_SEGMENT(2178, 5),
	STR_SEGMENT(2183, 3),
	STR_SEGMENT(2186, 12),
	STR_SEGMENT(2198, 12),
	STR_SEGMENT(2210, 18),
	STR_SEGMENT(2228, 18),
	STR_SEGMENT(2246, 7),
	STR_SEGMENT(2253, 11),
	STR_SEGMENT(2264, 14),
	STR_SEGMENT(2278, 8),
	STR_SEGMENT(2286, 11),
	STR_SEGMENT(2297, 7),
	STR_SEGMENT(2304, 10),
	STR_SEGMENT(2314, 6),
	STR_SEGMENT(2320, 9),
	STR_SEGMENT(2329, 8),
	STR_SEGMENT(2337, 11),
	STR_SEGMENT(2348, 10),
	STR_SEGMENT(2358, 13),
	STR_SEGMENT(2371, 10),
	STR_SEGMENT(2381, 13),
	STR_SEGMENT(2394, 15),
	STR_SEGMENT(2409, 18),
	STR_SEGMENT(2427, 17),
	STR_SEGMENT(2444, 7),
	STR_SEGMENT(2451, 15),
	STR_SEGMENT(2466, 18),
	STR_SEGMENT(2484, 10),
	STR_SEGMENT(2494, 13),
	STR_SEGMENT(2507, 10),
	STR_SEGMENT(2517, 13),
	STR_SEGMENT(2530, 8),
	STR_SEGMENT(2538, 11),
	STR_SEGMENT(2549, 7),
	STR_SEGMENT(2556, 10),
	STR_SEGMENT(2566, 8),
	STR_SEGMENT(2574, 11),
	STR_SEGMENT(2585, 11),
	STR_SEGMENT(2596, 14),
	STR_SEGMENT(2610, 11),
	STR_SEGMENT(2621, 6),
	STR_SEGMENT(2627, 8),
	STR_SEGMENT(2635, 5),
	STR_SEGMENT(2640, 6),
	STR_SEGMENT(2646, 7),
	STR_SEGMENT(2653, 6),
	STR_SEGMENT(2659, 4),
	STR_SEGMENT(2663, 6),
	STR_SEGMENT(2669, 4),
	STR_SEGMENT(2673, 8),
	STR_SEGMENT(2681, 3),
	STR_SEGMENT(2684, 5),
	STR_SEGMENT(2689, 4),
	STR_SEGMENT(2693, 6),
	STR_SEGMENT(2699, 10),
	STR_SEGMENT(2709, 6),
	STR_SEGMENT(2715, 11),
	STR_SEGMENT(2726, 9),
	STR_SEGMENT(2735, 18),
	STR_SEGMENT(2753, 9),
	STR_SEGMENT(2762, 18),
	STR_SEGMENT(2780, 4),
	STR_SEGMENT(2784, 12),
	STR_SEGMENT(2796, 14),
	STR_SEGMENT(2810, 7),
	STR_SEGMENT(2817, 8),
	STR_SEGMENT(2825, 5),
	STR_SEGMENT(2830, 13),
	STR_SEGMENT(2843, 4),
	STR_SEGMENT(2847, 11),
	STR_SEGMENT(2858, 6),
	STR_SEGMENT(2864, 13),
	STR_SEGMENT(2877, 5),
	STR_SEGMENT(2882, 10),
	STR_SEGMENT(2892, 8),
	STR_SEGMENT(2900, 3),
	STR_SEGMENT(2903, 20),
	STR_SEGMENT(2923, 9),
	STR_SEGMENT(2932, 4),
	STR_SEGMENT(2936, 7),
	STR_SEGMENT(2943, 7),
	STR_SEGMENT(2950, 6),
	STR_SEGMENT(2956, 5),
	STR_SEGMENT(2961, 5),
	STR_SEGMENT(2966, 4),
	STR_SEGMENT(2970, 6),
	STR_SEGMENT(2976, 5),
	STR_SEGMENT(2981, 9),
	STR_SEGMENT(2990, 17),
	STR_SEGMENT(3007, 14),
	STR_SEGMENT(3021, 17),
	STR_SEGMENT(3038, 11),
	STR_SEGMENT(3049, 8),
	STR_SEGMENT(3057, 11),
	STR_SEGMENT(3068, 9),
	STR_SEGMENT(3077, 7),
	STR_SEGMENT(3084, 7),
	STR_SEGMENT(3091, 9),
	STR_SEGMENT(3100, 9),
	STR_SEGMENT(3109, 17),
	STR_SEGMENT(3126, 17),
	STR_SEGMENT(3143, 7),
	STR_SEGMENT(3150, 13),
	STR_SEGMENT(3163, 11),
	STR_SEGMENT(3174, 1),
	STR_SEGMENT(3175, 4),
	STR_SEGMENT(3179, 3),
	STR_SEGMENT(3182, 5),
	STR_SEGMENT(3187, 6),
	STR_SEGMENT(3193, 2),
	STR_SEGMENT(3195, 7),
	STR_SEGMENT(3202, 5),
	STR_SEGMENT(3207, 3),
	STR_SEGMENT(3210, 4),
	STR_SEGMENT(3214, 4),
	STR_SEGMENT(3218, 4),
	STR_SEGMENT(3222, 5),
	STR_SEGMENT(3227, 4),
	STR_SEGMENT(3231, 3),
	STR_SEGMENT(3234, 3),
	STR_SEGMENT(3237, 5),
	STR_SEGMENT(3242, 3),
	STR_SEGMENT(3245, 3),
	STR_SEGMENT(3248, 3),
	STR_SEGMENT(3251, 3),
	STR_SEGMENT(3254, 6),
	STR_SEGMENT(3260, 5),
	STR_SEGMENT(3265, 3),
	STR_SEGMENT(3268, 4),
	STR_SEGMENT(3272, 3),
	STR_SEGMENT(3275, 6),
	STR_SEGMENT(3281, 8),
	STR_SEGMENT(3289, 6),
	STR_SEGMENT(3295, 7),
	STR_SEGMENT(3302, 7),
	STR_SEGMENT(3309, 11),
	STR_SEGMENT(3320, 6),
	STR_SEGMENT(3326, 6),
	STR_SEGMENT(3332, 6),
	STR_SEGMENT(3338, 7),
	STR_SEGMENT(3345, 30),
	STR_SEGMENT(3375, 40),
	STR_SEGMENT(3415, 45),
	STR_SEGMENT(3460, 17),
	STR_SEGMENT(3477, 17),
	STR_SEGMENT(3494, 47),
	STR_SEGMENT(3541, 43),
	STR_SEGMENT(3584, 35),
	STR_SEGMENT(3619, 36),
	STR_SEGMENT(3655, 36),
	STR_SEGMENT(3691, 31),
	STR_SEGMENT(3722, 12),
	STR_SEGMENT(3734, 11),
	STR_SEGMENT(3745, 10),
	STR_SEGMENT(3755, 10),
	STR_SEGMENT(3765, 9),
	STR_SEGMENT(3774, 9),
	STR_SEGMENT(3783, 9),
	STR_SEGMENT(3792, 8),
	STR_SEGMENT(3800, 8),
	STR_SEGMENT(3808, 8),
	STR_SEGMENT(3816, 8),
	STR_SEGMENT(3824, 8),
	STR_SEGMENT(3832, 7),
	STR_SEGMENT(3839, 7),
	STR_SEGMENT(3846, 7),
	STR_SEGMENT(3853, 7),
	STR_SEGMENT(3860, 7),
	STR_SEGMENT(3867, 7),
	STR_SEGMENT(3874, 6),
	STR_SEGMENT(3880, 6),
	STR_SEGMENT(3886, 6),
	STR_SEGMENT(3892, 6),
	STR_SEGMENT(3898, 6),
	STR_SEGMENT(3904, 6),
	STR_SEGMENT(3910, 6),
	STR_SEGMENT(3916, 6),
	STR_SEGMENT(3922, 6),
	STR_SEGMENT(3928, 6),
	STR_SEGMENT(3934, 6),
	STR_SEGMENT(3940, 5),
	STR_SEGMENT(3945, 5),
	STR_SEGMENT(3950, 5),
	STR_SEGMENT(3955, 5),
	STR_SEGMENT(3960, 5),
	STR_SEGMENT(3965, 5),
	STR_SEGMENT(3970, 5),
	STR_SEGMENT(3975, 5),
	STR_SEGMENT(3980, 5),
	STR_SEGMENT(3985, 5),
	STR_SEGMENT(3990, 4),
	STR_SEGMENT(3994, 4),
	STR_SEGMENT(3998, 4),
	STR_SEGMENT(4002, 4),
	STR_SEGMENT(4006, 4),
	STR_SEGMENT(4010, 4),
	STR_SEGMENT(4014, 4),
	STR_SEGMENT(4018, 4),
	STR_SEGMENT(4022, 4),
	STR_SEGMENT(4026, 4),
	STR_SEGMENT(4030, 3),
	STR_SEGMENT(4033, 3),
	STR_SEGMENT(4036, 3),
	STR_SEGMENT(4039, 3),
	STR_SEGMENT(4042, 3),
	STR_SEGMENT(4045, 2),
	STR_SEGMENT(4047, 2),
	STR_SEGMENT(4049, 2),
	STR_SEGMENT(4051, 4),
	STR_SEGMENT(4055, 4),
	STR_SEGMENT(4059, 5),
	STR_SEGMENT(4064, 9),
	STR_SEGMENT(4073, 9),
	STR_SEGMENT(4082, 17),
	STR_SEGMENT(4099, 5),
	STR_SEGMENT(4104, 1),
	STR_SEGMENT(4105, 1),
	STR_SEGMENT(4106, 1),
	STR_SEGMENT(4107, 1),
	STR_SEGMENT(4108, 1),
	STR_SEGMENT(4109, 1),
	STR_SEGMENT(4110, 1),
	STR_SEGMENT(4111, 1),
	STR_SEGMENT(4112, 1),
	STR_SEGMENT(4113, 2),
	STR_SEGMENT(4115, 2),
	STR_SEGMENT(4117, 2),
	STR_SEGMENT(4119, 2),
	STR_SEGMENT(4121, 2),
	STR_SEGMENT(4123, 2),
	STR_SEGMENT(4125, 2),
	STR_SEGMENT(4127, 2),
	STR_SEGMENT(4129, 2),
	STR_SEGMENT(4131, 2),
	STR_SEGMENT(4133, 2),
	STR_SEGMENT(4135, 2),
	STR_SEGMENT(4137, 2),
	STR_SEGMENT(4139, 2),
	STR_SEGMENT(4141, 2),
	STR_SEGMENT(4143, 9),
	STR_SEGMENT(4152, 9),
	STR_SEGMENT(4161, 11),
	STR_SEGMENT(4172, 12),
	STR_SEGMENT(4184, 7),
	STR_SEGMENT(4191, 6),
	STR_SEGMENT(4197, 3),
	STR_SEGMENT(4200, 5),
	STR_SEGMENT(4205, 4),
	STR_SEGMENT(4209, 5),
	STR_SEGMENT(4214, 9),
	STR_SEGMENT(4223, 8),
	STR_SEGMENT(4231, 7),
	STR_SEGMENT(4238, 4),
	STR_SEGMENT(4242, 5),
	STR_SEGMENT(4247, 6),
	STR_SEGMENT(4253, 3),
	STR_SEGMENT(4256, 3)};
#if !(STATIC_STRINGS)
struct SEE_string *SEE_stringtab = stringtab;
#endif
const unsigned int SEE_nstringtab = 341;
