#!/bin/bash

rawurlencode() {
  local string="${1}"
  local strlen=${#string}
  local encoded=""
  local pos c o

  for (( pos=0 ; pos<strlen ; pos++ )); do
     c=${string:$pos:1}
     case "$c" in
        [-_.~a-zA-Z0-9] ) o="${c}" ;;
        * )               printf -v o '%%%02x' "'$c"
     esac
     encoded+="${o}"
  done
  echo "${encoded}"    # You can either set a return variable (FASTER) 
  REPLY="${encoded}"   #+or echo the result (EASIER)... or both... :p
}

function setPasswords() {
  for user in "${users[@]}"
  do
    echo "Reseting password for user: $user"
    echo "$user:$PASS" | chpasswd
  done
}

function getConfig() {
  grep -i "^$1:" /etc/mazinger/config | head -n 1 | cut -d: -f 2
}

localusers=$(getConfig localUsers )
if [ $? = 0 ] 
then
  echo "Ignoring local users $localusers"
  IFS=, read -a lua <<< "$localusers"
  IFS=: 
  declare -a users
  users=(root)
  lua+=(root)
  while read user pass uid other 
  do
    if [ "${#pass}" -gt 5 ]
    then
       if [[ " ${lua[@]} " =~ " $user " ]]
       then
         echo "--> $user not processed"
       else
         echo "--> $user"
         users+=($user)
       fi
    fi
  done </etc/shadow
  
  PASS=$(head -c 18 /dev/urandom | base64)
  serial=$(getConfig serialNumber)
  i=0
  while [ $i -lt 24 ]
  do
    ssoservers=$(getConfig SSOServer)
    ssoport=$(getConfig seycon.https.port)
    certfile=$(getConfig CertificateFile)
    for server in $ssoservers
    do
      echo "Connecting to $server:$ssoport"
      if R=$(wget -O - "https://$ssoservers:$ssoport/sethostadmin?host=$(rawurlencode $(hostname))&user=root&serial=$(rawurlencode $serial)&pass=$(rawurlencode $PASS)" -nv --ca-certificate $certfile)
      then
        if [[ "$R" = OK* ]] 
        then
          setPasswords
          exit 0
        else
          echo "Error setting password: $R.\nRetrying in one hour"
        fi
      else
        echo "Error setting password. Retrying"
      fi
    done
    sleep 3601
    let i=i+1
  done  
fi

